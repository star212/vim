# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name}(${2:argument}){
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if (${1:true}) {
		${2}
	};
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
snippet (f
	(function(${2:w}){
		${3}
	})(${1:window});
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet getid
	getElementBy${1:Id}('${2}')${3}
snippet $
	$(document).ready(function(){
		${1}
	});
snippet dw
	document.write(${1});
snippet co
	console.log(${1});
snippet al
	alert(${1});
snippet ajax
	$.ajax({
		type:'${1:get}',
		url:'${2}',
		global:false,
		async:false,
		data:${5},
		beforeSend: function(){
			${3}
		},
		success:function(xml){
			${4}
		},
		error:function(XMLHttpRequest,textStatus){
			console.log(textStatus);
		}
	});
snippet bind
	$("${1}").bind({
		${2}
	});
snippet click
	$("${1}").click(function(){
		${2}
	});
snippet focus
	$("${1}").focus(function(){
		${2}
	});
snippet ajaxget
	$.get(${1},${2},
	  function(data){
		${3}
	  }); 
snippet post
	$.post(${1},${2},
	  function(data){
		${3}
	  }); 
snippet each
	$("${1}").each(function(i){
	  ${2}
	}); 	
snippet bm
	var ${1} = Backbone.Model.extend({${2}});
snippet bc
	var ${1} = Backbone.Collection.extend({${2}});
snippet bv
	var ${1} = Backbone.View.extend({${2}});
snippet addE
	addEventListener('${1}',function(){
		${2}
	}, false);
